/*	Entry point	*/
ENTRY(ercos_hal_reset_entry)

#include <public/config.h>

MCTRL = 0x80000000;
UARTA = 0x80000100; /*0x80000070*/
IRQMP = 0x80000200; /*0x80000090;*/
GPTIMER = 0x80000300; /*0x80000040;*/


MEMORY
{/*	rom : ORIGIN = 0x00000000, LENGTH = 512K*/
#if defined CONFIG_ERCOS_ROMKERNEL
	rom: ORIGIN = CONFIG_ERCOS_INITIAL_ROM_ADDRESS,
#if defined(CONFIG_ERCOS_ROM_SIZE_64KB)
          LENGTH = 64K
#elif defined(CONFIG_ERCOS_ROM_SIZE_128KB)
          LENGTH = 128K
#elif defined(CONFIG_ERCOS_ROM_SIZE_256KB)
          LENGTH = 256K
#elif defined(CONFIG_ERCOS_ROM_SIZE_512KB)
          LENGTH = 512K
#elif defined(CONFIG_ERCOS_ROM_SIZE_1MB)
          LENGTH = 1M
#else
          LENGTH = 2M
#endif
#endif

	ram : ORIGIN = CONFIG_ERCOS_INITIAL_RAM_ADDRESS,
#if defined(CONFIG_ERCOS_RAM_SIZE_256KB)
          LENGTH = 256K
#elif defined(CONFIG_ERCOS_RAM_SIZE_512KB)
          LENGTH = 512K
#elif defined(CONFIG_ERCOS_RAM_SIZE_1MB)
          LENGTH = 1M
#elif defined(CONFIG_ERCOS_RAM_SIZE_2MB)
          LENGTH = 2M
#elif defined(CONFIG_ERCOS_RAM_SIZE_4MB)
          LENGTH = 4M
#elif defined(CONFIG_ERCOS_RAM_SIZE_8MB)
          LENGTH = 8M
#elif defined(CONFIG_ERCOS_RAM_SIZE_16MB)
          LENGTH = 16M
#else
          LENGTH = 32M
#endif

/*	ram : ORIGIN = 0x02000000, LENGTH = 4M*/
}

SECTIONS
{
  .text :
  {
    CODE_START = .;
  
    *(.romvec)
    *(.text*)
    *(.rodata*)
    *(.gnu.linkonce.*)
  	*(.eh_frame)
  	
    . = ALIGN(0x10);
	
    CODE_END = .;

  } > ram

  .data :
  {
  	DATA_START = .;
  	
    *(.data)

    . = ALIGN(0x10);
	__ctors_GLOBAL__ = .;
    *(.ctors)
	QUAD(0)
	. = ALIGN(0x10);
	__dtors_GLOBAL__ = .;
    *(.dtors)
	QUAD(0)
	. = ALIGN(0x10);
    
    DATA_END = .;
    
  } > ram

  .bss :
  {
    bss_start = .;
    *(.bss)
    *(COMMON)
    . = ALIGN(0x10);
    end = .;
  } > ram
    
  /DISCARD/ :
  {
    *(*)
  }
}
